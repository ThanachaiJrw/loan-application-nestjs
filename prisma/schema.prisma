generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  MAKER
  CHECKER
  APPROVER
  ADMIN
}

model User {
  username  String   @id
  password  String
  role      Role     @default(USER)
  email     String   @unique
  name      String
  createBy  String
  createdDt DateTime @default(now())

  createLoans LoanApplication[] @relation("LoanCreateBy")
  updateLoans LoanApplication[] @relation("LoanUpdateBy")
  createActions LoanAppAction[] @relation("ActionCreateBy")
  updateActions LoanAppAction[] @relation("ActionUpdateBy")
  createCustomer Customer[] @relation("CustomerCreateBy")
  updateCustomer Customer[] @relation("CustomerUpdateBy")
  createAttachments LoanAttachment[] @relation("AttachUploadBy")
  @@map("loan_users")
}

model LoanApplication {
  app_no          String     @id @default(uuid())
  customer_no  String
  loan_amt      Float
  status      String @default("100")
  create_by    String
  create_dt    DateTime   @default(now())
  update_by    String?
  update_dt    DateTime?

  loanAppActions LoanAppAction[]
  loanAppAttachments LoanAttachment[]
  customer Customer @relation(fields: [customer_no], references: [customer_no])
  createBy User @relation("LoanCreateBy",fields: [create_by], references: [username])
  updateBy User? @relation("LoanUpdateBy",fields: [update_by], references: [username])
  @@map("loan_applications")
}

model LoanAppAction {
  action_id  String      @id @default(uuid())
  app_no     String
  seq     Int
  action_type String
  desc       String
  create_by  String
  create_dt  DateTime    @default(now())
  update_by  String?
  update_dt  DateTime?

  loanApp LoanApplication @relation(fields: [app_no], references: [app_no])
  createBy User @relation("ActionCreateBy",fields: [create_by], references: [username])
  updateBy User? @relation("ActionUpdateBy",fields: [update_by], references: [username])
  @@map("loan_app_actions")
}

model LoanAttachment {
  attachment_id String   @id @default(uuid())
  app_no      String
  seq         Int
  doc_type    String //
  file_name   String
  file_path   String
  file_type   String
  uploaded_by   String
  uploaded_dt   DateTime @default(now())

  loanApp LoanApplication @relation(fields: [app_no], references: [app_no])
  updloadedBy User @relation("AttachUploadBy",fields: [uploaded_by], references: [username])
  @@map("loan_attachments")
}

model Customer {
  customer_no String   @id
  customer_name String
  id_card     String   @unique
  dob         DateTime
  phone       String
  email       String   @unique
  address     String
  province     String
  district     String
  subdistrict  String
  create_by    String
  create_dt    DateTime @default(now())
  update_by    String?
  update_dt    DateTime?

  loanApps LoanApplication[]
  createBy User @relation("CustomerCreateBy",fields: [create_by], references: [username])
  updateBy User? @relation("CustomerUpdateBy",fields: [update_by], references: [username])
  @@map("customer_info")
}

// fix tomorrow and dr diagram
model Geography {
  geo_no String @id
  name String

  province Province[]
  @@map("geographies")
}
model Province {
  province_no String @id
  province_code String @unique
  province_th_name String
  province_en_name String
  geo_no String

  geography Geography @relation(fields: [geo_no], references: [geo_no])
  districts District[]
  @@map("provinces")
}

model District {
  district_no String @id
  district_code String @unique
  district_th_name String
  district_en_name String
  province_no String

  subdistricts Subdistrict[]
  province Province @relation(fields: [province_no], references: [province_no])
  @@map("districts")
}

model Subdistrict {
  subdistricts_no String @id
  zip_code String
  subdistrict_th_name String
  subdistrict_en_name String
  district_no String

  district District @relation(fields: [district_no], references: [district_no])
  @@map("subdistricts")
}



model Sequence {
  id      String   @id
  prefix  String //LN CM
  next_val  Int
  updated_dt DateTime @default(now()) @updatedAt
  @@map("sequences_config")
}
